"""
功能：统计数字出现在某范围的次数
解题思路1：构建1个长度为1000的空数组分别用来存放数据在0-99,100-199,200-299，...,99900-99999
范围内出现的次数。依次遍历10万个随机数，判断其大小后，在对应数组位置+1
该方法的空间复杂度低，但是时间复杂度较高。若要求空间换时间，则采用方法二
解题思路2：构建一个长度为十万的元素值都是0的初始数组，依次遍历输入的数据，当前数据的值作为数组的下标，
并将对应数组位子的值加1.遍历一遍之后，根据数组下标将范围统计出来，时间复杂度大大降低
作者：郭辉铭。2019.10.29
"""
# 方法1：时间复杂度高，空间复杂度低
def scope1(list):
    arr1 = [0]*1000
    for i in list:
        if i in range(0, 100):
            arr1[0] += 1
        if i in range(0, 100):
            arr1[1] += 1
        if i in range(0, 100):
            arr1[2] += 1
        if i in range(0, 100):
            arr1[3] += 1
            ...
        if i in range(99900, 100000):
            arr1[1000] += 1
    return arr1


# 方法二，时间复杂度大大降低，空间复杂度较高
def scope2(list):
    arr2 = [0]*100000
    for i in list:
        arr2[i] += 1
    for i in range(0, 100):
        a1 = 0
        a1 += arr2[i]
        print("0-99", a1)

    for i in range(0, 100):
        a2 = 0
        a2 += arr2[i]
        print("100-199", a2)
        ...
    for i in range(99900, 100000):
        a1000 = 0
        a1000 += arr2[i]
        print("99900-100000", a1000)